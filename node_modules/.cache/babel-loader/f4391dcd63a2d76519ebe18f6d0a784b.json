{"ast":null,"code":"var _jsxFileName = \"/Users/joshua/Documents/Doc/Brown/zYEAR3FALL/uiux/portfolio/src/components/styletransfer.js\";\nimport React from \"react\";\nimport './App.css';\nimport Page from './Page';\nimport style_transfer from './images/styletransfer/screamgalata.gif';\nimport vgg from './images/styletransfer/vgg-network.png';\n\nfunction StyleTransfer(props) {\n  return React.createElement(Page, {\n    className: \"portfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"styletransfer-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \" Style Transfer\"), React.createElement(\"div\", {\n    className: \"portfolio-st-section1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"text-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Context\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"We took on the task of implementing image style transfer, that is applying the artistic style of an image to another target image. We aimed to implement the original Gatys et al (2016) paper titled \\u201DImage Style Transfer Using Convolutional Neural Networks\\u201D. The main idea was to use the image features derived from the layers of a Convolutional Neural Network (CNN) and recombine them to create stylized image. \")), React.createElement(\"img\", {\n    id: \"portfolio-intro-image\",\n    src: style_transfer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"portfolio-st-section2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Architecture\"), React.createElement(\"img\", {\n    id: \"portfolio-vgg-image\",\n    src: vgg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" As in Gatys et. al (2016), style transfer can be achieved by combining extracted style and content features of an input image. Such features are best extracted by the pre-trained network VGG19, which is a 19-layer convolution network trained on the ImageNet database and is used for image classification. \")), React.createElement(\"div\", {\n    className: \"portfolio-section3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Image Representations\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"As we are using the VGG19 trained on object recog- nition, higher levels of the network capture the high level content but miss out the exact pixel values, thus provide a categorical representation of the image. Whereas the lower layers just reproduce the existing pixels and do not provide a meaningful representation for content. This is why we are using the feature responses in higher layers of VGG to create our content features.\")), React.createElement(\"div\", {\n    className: \"portfolio-section4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Design Choices\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" We made several design choices to generate improved results than the Gatys et. al paper. We used a maxpooling layer contrary to the average pool-ing layer suggested, which achieved more photorealistic results. Between convolutional layers 4 and 5, we found that Conv 5 outputted better content features. This might be a result of deeper layers extracting more generalized features. Our initial results generated very pixelated and noisy images since we resized the images before loading them to our model. We overcame this problem by using a median filter of size 3x3, to reduce the noise in the image and make it look more smooth. Gatys et al paper suggests changing the rel- ative weights of the style and content images, which we did while experimenting with different images and found the most optimal \\u03B2 ratio to be 0.025\")), React.createElement(\"div\", {\n    className: \"portfolio-section5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))));\n}\n\nexport default StyleTransfer;","map":{"version":3,"sources":["/Users/joshua/Documents/Doc/Brown/zYEAR3FALL/uiux/portfolio/src/components/styletransfer.js"],"names":["React","Page","style_transfer","vgg","StyleTransfer","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,GAAP,MAAgB,wCAAhB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEA;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6aAFA,CADJ,EAOI;AAAK,IAAA,EAAE,EAAC,uBAAR;AAA+B,IAAA,GAAG,EAAEH,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAFA,EAYA;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,IAAA,EAAE,EAAC,qBAAR;AAA6B,IAAA,GAAG,EAAEC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0TAHJ,CAZA,EAmBA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0bAHJ,CAnBA,EA2BA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,u0BAJJ,CA3BA,EAwCA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAxCA,CADA,CADJ;AAgDD;;AAGH,eAAeC,aAAf","sourcesContent":["import React from \"react\"\nimport './App.css';\nimport Page from './Page';\nimport style_transfer from './images/styletransfer/screamgalata.gif'\nimport vgg from './images/styletransfer/vgg-network.png'\n\nfunction StyleTransfer(props) {\n    return (\n        <Page className=\"portfolio\" >\n        <div className=\"styletransfer-page\">\n        <h1> Style Transfer</h1>\n        <div className=\"portfolio-st-section1\" >\n            <div id=\"text-container\">\n            <h2>Context</h2>\n            <p>We took on the task of implementing image style transfer, that is applying the artistic style of an image to another target\n            image. We aimed to implement the original Gatys et al\n            (2016) paper titled ”Image Style Transfer Using Convolutional Neural Networks”. The main idea was to use the image features derived from the layers of a Convolutional Neural Network (CNN) and recombine them to create stylized image. </p>\n            </div>\n            <img id=\"portfolio-intro-image\"src={style_transfer}/>\n        </div>\n\n        <div className=\"portfolio-st-section2\" >\n            <h2>Architecture</h2>\n            <img id=\"portfolio-vgg-image\"src={vgg}/>\n            <p> As in Gatys et. al (2016), style transfer can be achieved by combining extracted style and content features of an input image. Such features are best extracted by the pre-trained network VGG19, which is a 19-layer convolution network trained on the ImageNet database and is used for image classification. </p>\n            \n        </div>\n\n        <div className=\"portfolio-section3\" >\n            <h2>Image Representations</h2>\n\n            <p>\n            As we are using the VGG19 trained on object recog- nition, higher levels of the network capture the high level content but miss out the exact pixel values, thus provide a categorical representation of the image. Whereas the lower layers just reproduce the existing pixels and do not provide a meaningful representation for content. This is why we are using the feature responses in higher layers of VGG to create our content features.\n            </p>\n        </div>\n\n        <div className=\"portfolio-section4\" >\n            \n        <h2>Design Choices</h2>\n            \n            <p> We made several design choices to generate improved results than the Gatys et. al paper. We used a maxpooling layer contrary to the average pool-ing layer suggested, which achieved more photorealistic results.\nBetween convolutional layers 4 and 5, we found that Conv 5 outputted better content features. This might be a result of deeper layers extracting more generalized features.\nOur initial results generated very pixelated and noisy images since we resized the images before loading them to our model. We overcame this problem by using a median filter of size 3x3, to reduce the noise in the image and make it look more smooth. Gatys et al paper suggests changing the rel-\native weights of the style and content images, which we did\nwhile experimenting with different images and found the\nmost optimal β ratio to be 0.025</p>\n    \n        </div>\n\n        <div className=\"portfolio-section5\">\n            <h2></h2>\n        </div>\n        </div>\n    </Page>\n    )\n  }\n  \n\nexport default StyleTransfer;"]},"metadata":{},"sourceType":"module"}